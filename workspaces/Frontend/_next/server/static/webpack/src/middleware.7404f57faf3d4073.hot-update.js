"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _lib_auth_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/auth/auth */ \"(middleware)/./src/lib/auth/auth.ts\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _services_Lobby_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/Lobby.service */ \"(middleware)/./src/services/Lobby.service.ts\");\n\n\n\nasync function middleware(req) {\n    let crunchyToken = req.cookies.get(\"crunchy-token\")?.value;\n    let refreshToken = req.cookies.get(\"refresh-token\")?.value;\n    let changeCookies = false;\n    let verifiedToken = crunchyToken && await (0,_lib_auth_auth__WEBPACK_IMPORTED_MODULE_0__.verifyAuth)(crunchyToken).catch((err)=>{\n        console.log(err);\n    });\n    // const url = req.nextUrl;\n    // console.log(verifiedToken, url);\n    if (verifiedToken && req.nextUrl.pathname === \"/home/auth/google\") {\n        // console.log(\"do nothing go to google\");\n        return;\n    }\n    if (verifiedToken && verifiedToken.twoFactorAuth && req.nextUrl.pathname !== \"/home/auth/2fa\") {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/home/auth/2fa\", req.url));\n    }\n    // refresh token if token expires in less than 10 minutes\n    if (req.nextUrl.pathname.startsWith(\"/home\") && refreshToken) {\n        const currentTimestamp = Math.floor(Date.now() / 1000);\n        if (!verifiedToken || verifiedToken && verifiedToken.exp - currentTimestamp < 300) {\n            try {\n                const res = await fetch(`http://backend:4000/api/auth/refresh`, {\n                    method: \"POST\",\n                    headers: {\n                        Authorization: \"Bearer \" + crunchyToken,\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        refreshToken: refreshToken\n                    })\n                });\n                if (!res.ok) throw new Error(\"error fetch refresh token\");\n                const data = await res.json();\n                crunchyToken = data.access_token;\n                refreshToken = data.refresh_token;\n                changeCookies = true;\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n    if (verifiedToken && verifiedToken.login && req.nextUrl.pathname === \"/home/create\") {\n        // console.log(\"redirect go to home\")\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/home\", req.url));\n        if (changeCookies && refreshToken) {\n            response.cookies.set(\"crunchy-token\", crunchyToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n            response.cookies.set(\"refresh-token\", refreshToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n        }\n        return response;\n    }\n    if (verifiedToken && !verifiedToken.login && req.nextUrl.pathname.startsWith(\"/home\") && req.nextUrl.pathname !== \"/home/create\") {\n        // console.log(\"redkirect go create\");\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/home/create\", req.url));\n        if (changeCookies && refreshToken) {\n            response.cookies.set(\"crunchy-token\", crunchyToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n            response.cookies.set(\"refresh-token\", refreshToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n        }\n        return response;\n    }\n    if (req.nextUrl.pathname === \"/\" && !verifiedToken && !changeCookies) {\n        // console.log(\"redirect go to welcome\")\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/welcome\", req.url));\n    }\n    if (req.nextUrl.pathname === \"/\" && (verifiedToken || changeCookies)) {\n        // console.log(\"redirect go to home from /\")\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/home\", req.url));\n        if (changeCookies && refreshToken) {\n            response.cookies.set(\"crunchy-token\", crunchyToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n            response.cookies.set(\"refresh-token\", refreshToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n        }\n        return response;\n    }\n    if (req.nextUrl.pathname.startsWith(\"/welcome\") && (verifiedToken || changeCookies)) {\n        // console.log(\"redirect go to home from /welcome\")\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/home\", req.url));\n        if (changeCookies && refreshToken) {\n            response.cookies.set(\"crunchy-token\", crunchyToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n            response.cookies.set(\"refresh-token\", refreshToken, {\n                httpOnly: true,\n                sameSite: \"strict\",\n                path: \"/\"\n            });\n        }\n        return response;\n    }\n    if (req.nextUrl.pathname.startsWith(\"/home\") && !verifiedToken && !changeCookies) {\n        // console.log(\"redirect go to welcome from /home\")\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/welcome/notif\", req.url));\n    }\n    // console.log(\"nothing redirected\");\n    // Check if user is in a multiplayer game and redirect to page\n    if (req.nextUrl.pathname.startsWith(\"/home\") && (verifiedToken || changeCookies) && !req.nextUrl.pathname.startsWith(\"/home/game\")) {\n        console.log(\"check if user is in game\");\n        const lobbyService = new _services_Lobby_service__WEBPACK_IMPORTED_MODULE_2__[\"default\"](crunchyToken);\n        await lobbyService.isInGame().then((ret)=>{\n            if (ret.success) {\n                const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/home/game/\" + ret.data, req.url));\n                if (changeCookies && refreshToken) {\n                    response.cookies.set(\"crunchy-token\", crunchyToken, {\n                        httpOnly: true,\n                        sameSite: \"strict\",\n                        path: \"/\"\n                    });\n                    response.cookies.set(\"refresh-token\", refreshToken, {\n                        httpOnly: true,\n                        sameSite: \"strict\",\n                        path: \"/\"\n                    });\n                }\n                return response;\n            }\n        });\n    }\n    if (changeCookies && refreshToken) {\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].next();\n        response.cookies.set(\"crunchy-token\", crunchyToken, {\n            httpOnly: true,\n            sameSite: \"strict\",\n            path: \"/\"\n        });\n        response.cookies.set(\"refresh-token\", refreshToken, {\n            httpOnly: true,\n            sameSite: \"strict\",\n            path: \"/\"\n        });\n        return response;\n    }\n}\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except for the ones starting with:\n     * - icon, images\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */ \"/((?!api|icon|images|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});